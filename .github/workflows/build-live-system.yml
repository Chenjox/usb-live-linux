name: build-FSFW-Schulstick-ISO

# when to trigger building
on:
  # on every commit push: this is only meant temporary; too stressful for github infrastructure
  push:
  # every day at 23:42 UTC
  schedule:
    - cron: "42 23 * * *"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: set up build prerequisites
      run: |
        wget http://archive.ubuntu.com/ubuntu/pool/main/s/squashfs-tools/squashfs-tools_4.4-1_amd64.deb
        sudo dpkg -i *.deb
        sudo apt install debootstrap rsync pandoc debian-archive-keyring pigz python3-pip grub-pc-bin grub-efi-ia32-bin shim-signed syslinux-common parted fatattr dosfstools f2fs-tools libcdio-utils dialog ccze
        git clone https://salsa.debian.org/live-team/live-build.git
        cd live-build
        sed -i 's/comp xz/comp zstd/' scripts/build/binary_rootfs
        sudo make install
        # this worked?
        grep "comp" /usr/lib/live/build/binary_rootfs
    - name: nuke free some storage space in container
      run: |
        # sudo swapoff /swapfile && sudo rm /swapfile
        sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc
        df -h $(pwd)
    - name: build ISO
      run: |
        sudo bash -xv scripts/build-live-system.sh TEST-Ministick
        df -h $(pwd) /mnt
    - name: publish ISO as artifact
      uses: actions/upload-artifact@v1
      with:
        name: iso-image
        path: iso-images
    - name: publish build log as well
      uses: actions/upload-artifact@v1
      with:
        name: build.log
        path: build_*.log
    - name: build IMG
      run: |
        ISO=iso-images/*.iso
        sudo pip3 install j2cli
        sudo bash -xv scripts/img-create-schulstick.sh ${ISO} "/mnt"
        pigz /mnt/*.img
        df -h $(pwd) /mnt
    - name: publish IMG as artifact
      uses: actions/upload-artifact@v1
      with:
        name: gzipped stick-image
        path: /mnt/*.img.gz
