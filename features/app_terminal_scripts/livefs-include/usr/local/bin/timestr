#!/bin/bash +x
# converts a timespan given in seconds into a descriptive human-readable string
# THANKS https://unix.stackexchange.com/questions/364776/how-to-output-a-date-time-as-20-minutes-ago-or-9-days-ago-etc

time_fmt_low_precision() {
    local SEC_PER_MINUTE=$((60))
    local   SEC_PER_HOUR=$((60*60))
    local    SEC_PER_DAY=$((60*60*24))
    local  SEC_PER_MONTH=$((60*60*24*30))
    local   SEC_PER_YEAR=$((60*60*24*365))

    local last_unix="$(date --date="$1" +%s)"    # convert date to unix timestamp
    local now_unix="$(date +'%s')"

    local delta_s=$(( now_unix - last_unix ))

    if (( delta_s <  SEC_PER_MINUTE * 2))
    then
        echo ""$((delta_s))" seconds"
        return
    elif (( delta_s <  SEC_PER_HOUR * 2))
    then
        echo ""$((delta_s / SEC_PER_MINUTE))" minutes"
        return
    elif (( delta_s <  SEC_PER_DAY * 2))
    then
        echo ""$((delta_s / SEC_PER_HOUR))" hours"
        return
    elif (( delta_s <  SEC_PER_MONTH * 2))
    then
        echo ""$((delta_s / SEC_PER_DAY))" days"
        return
    elif (( delta_s <  SEC_PER_YEAR * 2))
    then
        echo ""$((delta_s / SEC_PER_MONTH))" months"
        return
    else
        echo ""$((delta_s / SEC_PER_YEAR))" years"
        return
    fi
}

time_fmt_low_precision ${@}
